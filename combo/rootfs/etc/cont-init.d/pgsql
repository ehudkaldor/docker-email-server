#!/usr/bin/with-contenv sh

chown -R postgres "$PGDATA"

logutil-service -f /var/log/

if [ -z "$(ls -A "$PGDATA")" ]; then
    echo "running initdb"
    s6-setuidgid postgres initdb

    echo "copying config files from /opt/pgsql.default/ to $PGDATA"
    s6-setuidgid postgres cp /opt/pgsql.default/* "$PGDATA/"

    echo "setting listen address to *"
    sed -ri "s/^#(listen_addresses\s*=\s*)\S+/\1'*'/" "$PGDATA"/postgresql.conf

    echo "checking parameters"

    : ${POSTGRES_USER:="postgres"}
    : ${POSTGRES_DB:=$POSTGRES_USER}

    if [ "$POSTGRES_PASSWORD" ]; then
      pass="PASSWORD '$POSTGRES_PASSWORD'"
      authMethod=md5
    else
      echo "==============================="
      echo "!!! Use \$POSTGRES_PASSWORD env var to secure your database !!!"
      echo "==============================="
      pass=
      authMethod=trust
    fi
    echo



#    if [ "$POSTGRES_USER" != 'postgres' ]; then
#      op=CREATE
#    else
#      op=ALTER
#    fi

#    userSql="$op USER $POSTGRES_USER WITH SUPERUSER $pass;"
#    echo $userSql | gosu postgres postgres --single -jE
#    echo

    # replace variable names in SQL scripts with provided values
    POSTFIX_PGSQL_USER=${POSTFIX_PGSQL_USER:-}
    if [[ -z ${POSTFIX_PGSQL_USER} ]]; then
        echo "WARN: POSTFIX_PGSQL_USER not found. using default"
        POSTFIX_PGSQL_USER=mailreader
    fi
    echo "POSTFIX_PGSQL_USER set to $POSTFIX_PGSQL_USER"

    POSTFIX_PGSQL_PASS=${POSTFIX_PGSQL_PASS:-}
    if [[ -z ${POSTFIX_PGSQL_PASS} ]]; then
        echo "WARN: POSTFIX_PGSQL_PASS not found. using default"
        POSTFIX_PGSQL_PASS=JJisCC
    fi
    echo "POSTFIX_PGSQL_PASS set"

    POSTFIX_PGSQL_DB=${POSTFIX_PGSQL_DB:-}
    if [[ -z ${POSTFIX_PGSQL_DB} ]]; then
        echo "WARN: POSTFIX_PGSQL_DB not found. using default"
        POSTFIX_PGSQL_DB=mail
    fi
    echo "POSTFIX_PGSQL_DB set to $POSTFIX_PGSQL_DB"

    SMTP_DOMAIN=${SMTP_DOMAIN:-}
    if [[ -z ${SMTP_DOMAIN} ]]; then
        echo "WARN: SMTP_DOMAIN not found. using default"
        SMTP_DOMAIN=domain.com
    fi
    echo "SMTP_DOMAIN set to $SMTP_DOMAIN"

    DOVECOT_HOST=${DOVECOT_HOST:-}
    if [[ -z ${DOVECOT_HOST} ]]; then
        echo "WARN: DOVECOT_HOST not found. using default"
        DOVECOT_HOST="dovecot.$SMTP_DOMAIN"
    fi
    echo "DOVECOT_HOST set to $DOVECOT_HOST"

    SMTP_HOSTNAME=${SMTP_HOSTNAME:-}
    if [[ -z ${SMTP_HOSTNAME} ]]; then
        echo "WARN: SMTP_HOSTNAME not found. using default"
        SMTP_HOSTNAME="email.$SMTP_DOMAIN"
    fi
    echo "SMTP_HOSTNAME set to $SMTP_HOSTNAME"

    sed -i "s/##DOVECOT_HOST##/$DOVECOT_HOST/g" "$PGDATA/"pg_hba.conf
    sed -i "s/##POSTFIX_PGSQL_USER##/$POSTFIX_PGSQL_USER/g" "$PGDATA/"pg_hba.conf
    sed -i "s/##SMTP_HOSTNAME##/$SMTP_HOSTNAME/g" "$PGDATA/"pg_hba.conf
    sed -i "s/##POSTFIX_PGSQL_DB##/$POSTFIX_PGSQL_DB/g" "$PGDATA/"pg_hba.conf


    sed -i "s/##POSTFIX_PGSQL_USER##/$POSTFIX_PGSQL_USER/g" /initdb.d/*
    sed -i "s/##POSTFIX_PGSQL_PASS##/$POSTFIX_PGSQL_PASS/g" /initdb.d/*
    sed -i "s/##POSTFIX_PGSQL_DB##/$POSTFIX_PGSQL_DB/g" /initdb.d/*
    sed -i "s/##SMTP_DOMAIN##/$SMTP_DOMAIN/g" /initdb.d/*


    # internal start of server in order to allow set-up using psql-client
    # does not listen on TCP/IP and waits until start finishes
    s6-setuidgid postgres pg_ctl -D "$PGDATA" \
        -o "-c listen_addresses=''" \
        -w start

    echo
    for f in /initdb.d/*; do
        case "$f" in
            *.sh)  echo "$0: running $f"; . "$f" ;;
#            *.sql) echo "$0: running $f"; psql --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" < "$f" && echo ;;
            *.sql) echo "$0: running $f"; psql --username "$POSTGRES_USER" -e < "$f" && echo ;;
            *)     echo "$0: ignoring $f" ;;
        esac
        echo
    done

    s6-setuidgid postgres pg_ctl -D "$PGDATA" -m fast -w stop

    { echo; echo "host all all 0.0.0.0/0 $authMethod"; } >> "$PGDATA"/pg_hba.conf


fi
